server.port=8085

#logging.level.root=INFO
# LOGGING
#logging.config= # Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
#logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.
#logging.file= # Log file name. For instance `myapp.log`
#logging.level.*= # Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
#logging.path= # Location of the log file. For instance `/var/log`
#logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the default logback setup.
#logging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.

# SPRING CONFIG - using environment property only (ConfigFileApplicationListener)
#spring.config.location= # Config file locations.
#spring.config.name=application # Config file name.


# HTTP encoding (HttpEncodingProperties)
#spring.http.encoding.charset=UTF-8 # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
#spring.http.encoding.enabled=true # Enable http encoding support.
#spring.http.encoding.force= # Force the encoding to the configured charset on HTTP requests and responses.
#spring.http.encoding.force-request= # Force the encoding to the configured charset on HTTP requests. Defaults to true when "force" has not been specified.
#spring.http.encoding.force-response= # Force the encoding to the configured charset on HTTP responses.
#spring.http.encoding.mapping= # Locale to Encoding mapping.

# ENDPOINTS CORS CONFIGURATION (EndpointCorsProperties)
#endpoints.cors.allow-credentials= # Set whether credentials are supported. When not set, credentials are not supported.
#endpoints.cors.allowed-headers= # Comma-separated list of headers to allow in a request. '*' allows all headers.
#endpoints.cors.allowed-methods=GET # Comma-separated list of methods to allow. '*' allows all methods.
#endpoints.cors.allowed-origins= # Comma-separated list of origins to allow. '*' allows all origins. When not set, CORS support is disabled.
#endpoints.cors.exposed-headers= # Comma-separated list of headers to include in a response.
#endpoints.cors.max-age=1800 # How long, in seconds, the response from a pre-flight request can be cached by clients.


# LIQUIBASE (LiquibaseProperties)
#liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml # Change log configuration path.
#liquibase.check-change-log-location=true # Check the change log location exists.
#liquibase.contexts= # Comma-separated list of runtime contexts to use.
#liquibase.default-schema= # Default database schema.
#liquibase.drop-first=false # Drop the database schema first.
#liquibase.enabled=true # Enable liquibase support.
#liquibase.labels= # Comma-separated list of runtime labels to use.
#liquibase.parameters.*= # Change log parameters.
#liquibase.password= # Login password of the database to migrate.
#liquibase.rollback-file= # File to which rollback SQL will be written when an update is performed.
#liquibase.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.
#liquibase.user= # Login user of the database to migrate.

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.continue-on-error=false # Do not stop if an error occurs while initializing the database.
#spring.datasource.data= # Data (DML) script resource reference.
#spring.datasource.data-username= # User of the database to execute DML scripts (if different).
#spring.datasource.data-password= # Password of the database to execute DML scripts (if different).
#spring.datasource.dbcp.*= # Commons DBCP specific settings
#spring.datasource.dbcp2.*= # Commons DBCP2 specific settings
#spring.datasource.driver-class-name= # Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
#spring.datasource.generate-unique-name=false # Generate a random datasource name.
#spring.datasource.hikari.*= # Hikari specific settings
#spring.datasource.initialize=true # Populate the database using 'data.sql'.
#spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).
#spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.
#spring.datasource.name=testdb # Name of the datasource.
#spring.datasource.password= # Login password of the database.
#spring.datasource.platform=all # Platform to use in the schema resource (schema-${platform}.sql).
#spring.datasource.schema= # Schema (DDL) script resource reference.
#spring.datasource.schema-username= # User of the database to execute DDL scripts (if different).
#spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).
#spring.datasource.separator=; # Statement separator in SQL initialization scripts.
#spring.datasource.sql-script-encoding= # SQL scripts encoding.
#spring.datasource.tomcat.*= # Tomcat datasource specific settings
#spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
#spring.datasource.url= # JDBC url of the database.
#spring.datasource.username=

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
#spring.data.jpa.repositories.enabled=true # Enable JPA repositories.
#spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
#spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
#spring.jpa.generate-ddl=false # Initialize the schema on startup.
#spring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
#spring.jpa.hibernate.naming.implicit-strategy= # Hibernate 5 implicit naming strategy fully qualified name.
#spring.jpa.hibernate.naming.physical-strategy= # Hibernate 5 physical naming strategy fully qualified name.
#spring.jpa.hibernate.naming.strategy= # Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.
#spring.jpa.hibernate.use-new-id-generator-mappings= # Use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.properties.*= # Additional native properties to set on the JPA provider.
#spring.jpa.show-sql=false # Enable logging of SQL statements.